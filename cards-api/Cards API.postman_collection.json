{
	"info": {
		"_postman_id": "b44b00f1-018a-4216-930e-fdceea521cda",
		"name": "Wise Cards API",
		"description": "This collection describes the required endpoints for a successful bank partner's integration of the Cards API.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6154545"
	},
	"item": [
		{
			"name": "1. Authentication",
			"item": [
				{
					"name": "1. Generate tokens from authorization code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();",
									"",
									"pm.test(\"Are tokens provided\", function () {",
									"    pm.expect(json).to.have.property(\"access_token\");",
									"    pm.expect(json).to.have.property(\"refresh_token\");",
									"    if (!json.access_token || !json.refresh_token) {",
									"        postman.setNextRequest(null);",
									"    }",
									"});",
									"",
									"pm.environment.set(\"token\", json.access_token);",
									"pm.environment.set(\"refresh\", json.refresh_token);",
									"postman.setNextRequest(\"Create batch group\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client-secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client-id}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client-id}}",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "{{client-redirect-uri}}",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{client-auth-code}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"oauth",
								"token"
							]
						},
						"description": "Request access token | authorization code grant type"
					},
					"response": []
				},
				{
					"name": "2. Refresh existing access token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();",
									"",
									"pm.test(\"Are tokens provided\", function () {",
									"    pm.expect(json).to.have.property(\"access_token\");",
									"    if (!json.access_token) {",
									"        postman.setNextRequest(null);",
									"    }",
									"});",
									"",
									"pm.environment.set(\"token\", json.access_token);",
									"postman.setNextRequest(\"Create batch group\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client-secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client-id}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "refresh_token",
									"type": "text"
								},
								{
									"key": "refresh_token",
									"value": "{{refresh}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"oauth",
								"token"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "2. Card Issuance",
			"item": [
				{
					"name": "1. Get card order availability",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/card-orders/availability",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"card-orders",
								"availability"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Get card orders",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/card-orders",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"card-orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Get a card order",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/card-orders/{{card_order_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"card-orders",
								"{{card_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Create a card order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileId\": {{profile_id}},\n    \"userId\": {{user_id}},\n    \"program\": \"VISA_DEBIT_BUSINESS_UK_1\",\n    \"cardHolderName\": \"Kristo Käärmann\",\n    \"billingAddress\": {\n        \"firstLine\": \"56 Shoreditch High Street\",\n        \"city\": \"London\",\n        \"postCode\": \"E1 6JJ\",\n        \"country\": \"GB\"\n    },\n    \"phoneNumber\": \"+441234567890\",\n    \"lifetimeLimit\": 100\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/card-orders",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"card-orders"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Card Management",
			"item": [
				{
					"name": "1. Get cards",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/cards",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Get a card",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/cards/{{card_token}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"cards",
								"{{card_token}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Set a card status",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"status\": \"FROZEN\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/cards/{{card_token}}/status",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"cards",
								"{{card_token}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Get card spending limits",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/cards/{{card_token}}/spending-limits",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"cards",
								"{{card_token}}",
								"spending-limits"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Add a card spending limit",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cardLimitType\": \"LIFETIME\",\n    \"maxLimitAmount\": 100\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/cards/{{card_token}}/spending-limits",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"cards",
								"{{card_token}}",
								"spending-limits"
							]
						}
					},
					"response": []
				},
				{
					"name": "6. Get card transactions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/v3/spend/profiles/{{profile_id}}/cards/{{card_token}}/transactions?pageSize=10&pageNumber=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"v3",
								"spend",
								"profiles",
								"{{profile_id}}",
								"cards",
								"{{card_token}}",
								"transactions"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "pageNumber",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Sensitive Card Details",
			"item": [
				{
					"name": "Get sensitive card details",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "x-tw-twcard-card-token",
								"value": "{{x-tw-twcard-card-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"keyVersion\":1,\n    \"encryptedPayload\": {{encrypted-card-data-payload}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pci-host}}/twcard-data/v1/sensitive-card-data/details",
							"host": [
								"{{pci-host}}"
							],
							"path": [
								"twcard-data",
								"v1",
								"sensitive-card-data",
								"details"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}